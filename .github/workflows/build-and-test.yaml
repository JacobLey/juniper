name: Build and Test
on:
  pull_request:
    type:
      - opened
      - synchronize
      - reopened
  workflow_call: {}
jobs:
  install:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.repository == 'JacobLey/schema-forge'
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: cache-install
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - if: steps.cache-install.outputs.cache-hit != 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - if: steps.cache-install.outputs.cache-hit != 'true'
        run: npm ci

      - run: |
          touch installed.tgz
          tar -zcf installed.tgz --exclude=installed.tgz --exclude=.git .
      - uses: actions/upload-artifact@v3
        with:
          name: installed
          path: installed.tgz
          retention-days: 1

  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: installed
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: |
          tar -xf installed.tgz
          rm installed.tgz

      - uses: actions/cache@v3
        id: cache-eslint
        with:
          path: .eslintcache
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - run: npm run lint -- --cache-strategy=content

  build:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: installed
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: |
          tar -xf installed.tgz
          rm installed.tgz

      - run: npm run tsc

      - run: tar -zcf built.tgz ./dist
      - uses: actions/upload-artifact@v3
        with:
          name: built
          path: built.tgz
          retention-days: 1

  test:
    needs:
      - install
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: installed
      - uses: actions/download-artifact@v3
        with:
          name: built
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: |
          tar -xf installed.tgz
          rm installed.tgz

          tar -xf built.tgz
          rm built.tgz

      - run: npm test
